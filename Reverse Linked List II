/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseBetween(ListNode head, int left, int right) {
        if(head==null || head.next == null) return head;
        ListNode d = new ListNode();
        d.next= head; 
        ListNode p = d; 
        ListNode curr = head;
       for(int i=1; i< left;i++){
            p=curr;
            curr= curr.next; 
        }
        ListNode prev = null;
    for(int i=0; i< right-left+1;i++){
            ListNode nxt= curr.next;
            curr.next=prev; 
            prev= curr;
            curr=nxt;
        }
    p.next.next=curr;
        p.next = prev;
        //temp.next= curr; 
        return d.next; 
    }
}
