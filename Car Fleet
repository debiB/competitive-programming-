class car{
int position;
double time;
    car(int p, double t){
        position=p;
        time =t;
    }
}


class Solution {
    public int carFleet(int target, int[] position, int[] speed) {
        if(position.length < 2) return position.length;
        car [] n= new car[position.length];
        Stack<Double> st= new Stack();
        for(int i=0;i<position.length;i++){
            double time= (double)(target - position[i])/(double)speed[i];
           n[i] = new car(position[i], time); 
        }
        Arrays.sort(n, new Comparator<car>(){
        public int compare(car e1 , car e2){
            return e1.position - e2.position;
        }
        });
        for(int i=n.length-1;i>=0;i--){
            if (i== n.length-1){
                st.add(n[i].time);
            } else if(st.peek() < n[i].time){
                 st.add(n[i].time);
            }

        }
        return st.size();
    }
}
